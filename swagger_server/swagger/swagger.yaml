openapi: 3.0.1
info:
  title: School Management System API
  description: "APIs for managing branches, employees, students, receipts, etc."
  contact:
    email: tejabhargavpodila@gmail.com
  license:
    name: Your License
  version: 1.0.0
servers:
- url: http://localhost:8080/v1
tags:
- name: branches
  description: Operations related to branches
- name: employees
  description: Operations related to employees
- name: students
  description: Operations related to students
- name: receipts
  description: Operations related to receipts
- name: approvals
  description: Operations related to approvals
- name: reports
  description: Operations related to reports
paths:
  /branches:
    get:
      tags:
      - branches
      summary: Retrieve all branches
      description: Get a list of all branches.
      operationId: branches_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchList'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.branches_controller
    post:
      tags:
      - branches
      summary: Create a new branch
      description: Add a new branch to the system.
      operationId: branches_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchCreateRequest'
        required: true
      responses:
        "201":
          description: Branch created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.branches_controller
    delete:
      tags:
      - branches
      summary: Delete a branch
      description: Delete a branch by ID.
      operationId: branches_delete
      parameters:
      - name: branchId
        in: query
        description: ID of the branch to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Branch deleted successfully
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.branches_controller
  /employees:
    get:
      tags:
      - employees
      summary: Retrieve all employees
      description: Get a list of all employees.
      operationId: employees_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeList'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.employees_controller
    post:
      tags:
      - employees
      summary: Create a new employee
      description: Add a new employee to the system.
      operationId: employees_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateRequest'
        required: true
      responses:
        "201":
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.employees_controller
    delete:
      tags:
      - employees
      summary: Delete an employee
      description: Delete an employee by ID.
      operationId: employees_delete
      parameters:
      - name: employeeId
        in: query
        description: ID of the employee to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Employee deleted successfully
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.employees_controller
  /students:
    get:
      tags:
      - students
      summary: Retrieve all students
      description: Get a list of all students.
      operationId: students_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentList'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.students_controller
    post:
      tags:
      - students
      summary: Create a new student
      description: Add a new student to the system.
      operationId: students_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCreateRequest'
        required: true
      responses:
        "201":
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.students_controller
    delete:
      tags:
      - students
      summary: Delete a student
      description: Delete a student by ID.
      operationId: students_delete
      parameters:
      - name: studentId
        in: query
        description: ID of the student to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Student deleted successfully
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.students_controller
  /receipts:
    get:
      tags:
      - receipts
      summary: Retrieve all receipts
      description: Get a list of all receipts.
      operationId: receipts_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptList'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.receipts_controller
    post:
      tags:
      - receipts
      summary: Create a new receipt
      description: Add a new receipt to the system.
      operationId: receipts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptCreateRequest'
        required: true
      responses:
        "201":
          description: Receipt created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.receipts_controller
    delete:
      tags:
      - receipts
      summary: Delete a receipt
      description: Delete a receipt by ID.
      operationId: receipts_delete
      parameters:
      - name: receiptId
        in: query
        description: ID of the receipt to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Receipt deleted successfully
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.receipts_controller
  /approvals:
    post:
      tags:
      - approvals
      summary: Approve an entity
      description: "Approve a student, employee, branch, or receipt."
      operationId: approvals_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
        required: true
      responses:
        "200":
          description: Approval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalResponse'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.approvals_controller
  /reports:
    get:
      tags:
      - reports
      summary: Generate reports
      description: "Generate various reports (e.g., receipts report, pending fee report)."
      operationId: reports_get
      parameters:
      - name: reportType
        in: query
        description: Type of report to generate
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - receipts
          - pendingFee
      responses:
        "200":
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportData'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.reports_controller
  /bulk-update-student:
    post:
      summary: Bulk update students
      description: Update multiple students based on specified criteria.
      operationId: bulk_update_student_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateRequest'
        required: true
      responses:
        "200":
          description: Students updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateResponse'
        "401":
          description: Unauthorized access error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Unauthorized
                code: 401
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Resource not found
                code: 404
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Branch:
      type: object
      properties:
        branchId:
          type: string
        branchName:
          type: string
        branchCode:
          maxLength: 3
          minLength: 3
          type: string
        address:
          type: string
        contact:
          type: string
        coursesOffered:
          type: array
          items:
            type: string
        batches:
          type: array
          items:
            type: string
        yearOfJoining:
          type: array
          items:
            type: string
        sections:
          type: array
          items:
            type: string
        accounts:
          type: array
          items:
            type: string
      example:
        branchCode: branchCode
        branchId: branchId
        batches:
        - batches
        - batches
        address: address
        contact: contact
        branchName: branchName
        coursesOffered:
        - coursesOffered
        - coursesOffered
        accounts:
        - accounts
        - accounts
        yearOfJoining:
        - yearOfJoining
        - yearOfJoining
        sections:
        - sections
        - sections
    Employee:
      type: object
      properties:
        employeeId:
          type: string
        name:
          type: string
        role:
          type: string
        branch:
          type: string
        username:
          type: string
        password:
          type: string
      example:
        password: password
        role: role
        name: name
        employeeId: employeeId
        branch: branch
        username: username
    Student:
      type: object
      properties:
        studentId:
          type: string
        applicationNumber:
          type: string
        dateOfJoining:
          type: string
          format: date
        branch:
          type: string
        name:
          type: string
        parentName:
          type: string
        primaryNumber:
          type: string
        secondaryNumber:
          type: string
        gender:
          type: string
          enum:
          - Male
          - Female
          - Other
        batch:
          type: string
        yearOfJoining:
          type: string
        section:
          type: string
        rollNumber:
          type: string
        feeStructureForOneYear:
          type: number
      example:
        secondaryNumber: secondaryNumber
        gender: Male
        applicationNumber: applicationNumber
        batch: batch
        section: section
        yearOfJoining: yearOfJoining
        branch: branch
        primaryNumber: primaryNumber
        studentId: studentId
        dateOfJoining: 2000-01-23
        parentName: parentName
        feeStructureForOneYear: 0.80082819046101150206595775671303272247314453125
        name: name
        rollNumber: rollNumber
    Receipt:
      type: object
      properties:
        receiptId:
          type: string
        studentId:
          type: string
        feeAmount:
          type: number
        modeOfPayment:
          type: string
          enum:
          - Cash
          - Card
          - Cheque
          - Bank Transfer/UPI
          - Concession
        letterHeadOnReceipt:
          type: string
      example:
        studentId: studentId
        feeAmount: 0.80082819046101150206595775671303272247314453125
        letterHeadOnReceipt: letterHeadOnReceipt
        modeOfPayment: Cash
        receiptId: receiptId
    BranchList:
      type: array
      items:
        $ref: '#/components/schemas/Branch'
    EmployeeList:
      type: array
      items:
        $ref: '#/components/schemas/Employee'
    StudentList:
      type: array
      items:
        $ref: '#/components/schemas/Student'
    ReceiptList:
      type: array
      items:
        $ref: '#/components/schemas/Receipt'
    ApprovalRequest:
      type: object
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
          enum:
          - student
          - employee
          - branch
          - receipt
        approval_status:
          type: string
          enum:
          - approved
          - rejected
    ApprovalResponse:
      type: object
      properties:
        message:
          type: string
      example:
        message: message
    ReportData:
      type: object
      properties:
        report:
          type: array
          items:
            $ref: '#/components/schemas/ReportData_report'
      example:
        report:
        - approvalStatus: approvalStatus
          dateOfPayment: dateOfPayment
          year: year
          modeOfPayment: modeOfPayment
          studentName: studentName
          rollNumber: rollNumber
          batch: batch
          paid: 0.80082819046101150206595775671303272247314453125
          branch: branch
          receiptNumber: receiptNumber
        - approvalStatus: approvalStatus
          dateOfPayment: dateOfPayment
          year: year
          modeOfPayment: modeOfPayment
          studentName: studentName
          rollNumber: rollNumber
          batch: batch
          paid: 0.80082819046101150206595775671303272247314453125
          branch: branch
          receiptNumber: receiptNumber
    BranchCreateRequest:
      type: object
      properties:
        branchName:
          type: string
        branchCode:
          maxLength: 3
          minLength: 3
          type: string
        address:
          type: string
        contact:
          type: string
        coursesOffered:
          type: array
          items:
            type: string
    EmployeeCreateRequest:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        branch:
          type: string
        username:
          type: string
        password:
          type: string
    StudentCreateRequest:
      type: object
      properties:
        applicationNumber:
          type: string
        branch:
          type: string
        name:
          type: string
        parentName:
          type: string
        primaryNumber:
          type: string
        secondaryNumber:
          type: string
        gender:
          type: string
          enum:
          - Male
          - Female
          - Other
        batch:
          type: string
        yearOfJoining:
          type: string
        section:
          type: string
        rollNumber:
          type: string
        feeStructureForOneYear:
          type: number
    ReceiptCreateRequest:
      type: object
      properties:
        studentId:
          type: string
        feeAmount:
          type: number
        modeOfPayment:
          type: string
          enum:
          - Cash
          - Card
          - Cheque
          - Bank Transfer/UPI
          - Concession
        letterHeadOnReceipt:
          type: string
    BulkUpdateRequest:
      type: object
      properties:
        filterCriteria:
          $ref: '#/components/schemas/BulkUpdateRequest_filterCriteria'
        updateFields:
          $ref: '#/components/schemas/BulkUpdateRequest_updateFields'
    BulkUpdateResponse:
      type: object
      properties:
        message:
          type: string
        updatedCount:
          type: integer
      example:
        updatedCount: 0
        message: message
    Error:
      type: object
      properties:
        message:
          type: string
        details:
          type: string
    ReportData_report:
      type: object
      properties:
        studentName:
          type: string
        rollNumber:
          type: string
        branch:
          type: string
        batch:
          type: string
        year:
          type: string
        paid:
          type: number
        modeOfPayment:
          type: string
        dateOfPayment:
          type: string
        receiptNumber:
          type: string
        approvalStatus:
          type: string
      example:
        approvalStatus: approvalStatus
        dateOfPayment: dateOfPayment
        year: year
        modeOfPayment: modeOfPayment
        studentName: studentName
        rollNumber: rollNumber
        batch: batch
        paid: 0.80082819046101150206595775671303272247314453125
        branch: branch
        receiptNumber: receiptNumber
    BulkUpdateRequest_filterCriteria:
      type: object
      properties:
        branch:
          type: string
          description: Branch name for filtering
        batch:
          type: string
          description: Batch name for filtering
        yearOfJoining:
          type: string
          description: Year of joining for filtering
      description: Criteria to filter students for bulk update
    BulkUpdateRequest_updateFields:
      type: object
      properties:
        course:
          type: string
          description: Updated course for students
        batch:
          type: string
          description: Updated batch for students
        yearOfJoining:
          type: string
          description: Updated year of joining for students
      description: Fields to update for matching students
  responses:
    UnauthorizedError:
      description: Unauthorized access error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Unauthorized
            code: 401
    NotFoundError:
      description: Resource not found error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Resource not found
            code: 404
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              details:
                type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_bearerAuth

