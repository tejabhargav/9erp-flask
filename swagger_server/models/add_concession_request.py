# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AddConcessionRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, application_number: str=None, student_name: str=None, fee_type: str=None, amount: float=None, reason: str=None, issued_by: str=None, issued_date: str=None):  # noqa: E501
        """AddConcessionRequest - a model defined in Swagger

        :param application_number: The application_number of this AddConcessionRequest.  # noqa: E501
        :type application_number: str
        :param student_name: The student_name of this AddConcessionRequest.  # noqa: E501
        :type student_name: str
        :param fee_type: The fee_type of this AddConcessionRequest.  # noqa: E501
        :type fee_type: str
        :param amount: The amount of this AddConcessionRequest.  # noqa: E501
        :type amount: float
        :param reason: The reason of this AddConcessionRequest.  # noqa: E501
        :type reason: str
        :param issued_by: The issued_by of this AddConcessionRequest.  # noqa: E501
        :type issued_by: str
        :param issued_date: The issued_date of this AddConcessionRequest.  # noqa: E501
        :type issued_date: str
        """
        self.swagger_types = {
            'application_number': str,
            'student_name': str,
            'fee_type': str,
            'amount': float,
            'reason': str,
            'issued_by': str,
            'issued_date': str
        }

        self.attribute_map = {
            'application_number': 'applicationNumber',
            'student_name': 'studentName',
            'fee_type': 'feeType',
            'amount': 'amount',
            'reason': 'reason',
            'issued_by': 'issuedBy',
            'issued_date': 'issuedDate'
        }
        self._application_number = application_number
        self._student_name = student_name
        self._fee_type = fee_type
        self._amount = amount
        self._reason = reason
        self._issued_by = issued_by
        self._issued_date = issued_date

    @classmethod
    def from_dict(cls, dikt) -> 'AddConcessionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddConcessionRequest of this AddConcessionRequest.  # noqa: E501
        :rtype: AddConcessionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_number(self) -> str:
        """Gets the application_number of this AddConcessionRequest.


        :return: The application_number of this AddConcessionRequest.
        :rtype: str
        """
        return self._application_number

    @application_number.setter
    def application_number(self, application_number: str):
        """Sets the application_number of this AddConcessionRequest.


        :param application_number: The application_number of this AddConcessionRequest.
        :type application_number: str
        """

        self._application_number = application_number

    @property
    def student_name(self) -> str:
        """Gets the student_name of this AddConcessionRequest.


        :return: The student_name of this AddConcessionRequest.
        :rtype: str
        """
        return self._student_name

    @student_name.setter
    def student_name(self, student_name: str):
        """Sets the student_name of this AddConcessionRequest.


        :param student_name: The student_name of this AddConcessionRequest.
        :type student_name: str
        """

        self._student_name = student_name

    @property
    def fee_type(self) -> str:
        """Gets the fee_type of this AddConcessionRequest.


        :return: The fee_type of this AddConcessionRequest.
        :rtype: str
        """
        return self._fee_type

    @fee_type.setter
    def fee_type(self, fee_type: str):
        """Sets the fee_type of this AddConcessionRequest.


        :param fee_type: The fee_type of this AddConcessionRequest.
        :type fee_type: str
        """
        allowed_values = ["firstYearTuitionFee", "firstYearHostelFee", "secondYearTuitionFee", "secondYearHostelFee"]  # noqa: E501
        if fee_type not in allowed_values:
            raise ValueError(
                "Invalid value for `fee_type` ({0}), must be one of {1}"
                .format(fee_type, allowed_values)
            )

        self._fee_type = fee_type

    @property
    def amount(self) -> float:
        """Gets the amount of this AddConcessionRequest.


        :return: The amount of this AddConcessionRequest.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this AddConcessionRequest.


        :param amount: The amount of this AddConcessionRequest.
        :type amount: float
        """

        self._amount = amount

    @property
    def reason(self) -> str:
        """Gets the reason of this AddConcessionRequest.


        :return: The reason of this AddConcessionRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this AddConcessionRequest.


        :param reason: The reason of this AddConcessionRequest.
        :type reason: str
        """

        self._reason = reason

    @property
    def issued_by(self) -> str:
        """Gets the issued_by of this AddConcessionRequest.


        :return: The issued_by of this AddConcessionRequest.
        :rtype: str
        """
        return self._issued_by

    @issued_by.setter
    def issued_by(self, issued_by: str):
        """Sets the issued_by of this AddConcessionRequest.


        :param issued_by: The issued_by of this AddConcessionRequest.
        :type issued_by: str
        """

        self._issued_by = issued_by

    @property
    def issued_date(self) -> str:
        """Gets the issued_date of this AddConcessionRequest.


        :return: The issued_date of this AddConcessionRequest.
        :rtype: str
        """
        return self._issued_date

    @issued_date.setter
    def issued_date(self, issued_date: str):
        """Sets the issued_date of this AddConcessionRequest.


        :param issued_date: The issued_date of this AddConcessionRequest.
        :type issued_date: str
        """

        self._issued_date = issued_date
