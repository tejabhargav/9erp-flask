# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ReceiptCreateRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, application_number: str=None, fee_type: str=None, amount: float=None, mode_of_payment: str=None, cheque_number: str=None, date_of_payment: str=None):  # noqa: E501
        """ReceiptCreateRequest - a model defined in Swagger

        :param application_number: The application_number of this ReceiptCreateRequest.  # noqa: E501
        :type application_number: str
        :param fee_type: The fee_type of this ReceiptCreateRequest.  # noqa: E501
        :type fee_type: str
        :param amount: The amount of this ReceiptCreateRequest.  # noqa: E501
        :type amount: float
        :param mode_of_payment: The mode_of_payment of this ReceiptCreateRequest.  # noqa: E501
        :type mode_of_payment: str
        :param cheque_number: The cheque_number of this ReceiptCreateRequest.  # noqa: E501
        :type cheque_number: str
        :param date_of_payment: The date_of_payment of this ReceiptCreateRequest.  # noqa: E501
        :type date_of_payment: str
        """
        self.swagger_types = {
            'application_number': str,
            'fee_type': str,
            'amount': float,
            'mode_of_payment': str,
            'cheque_number': str,
            'date_of_payment': str
        }

        self.attribute_map = {
            'application_number': 'applicationNumber',
            'fee_type': 'feeType',
            'amount': 'amount',
            'mode_of_payment': 'modeOfPayment',
            'cheque_number': 'chequeNumber',
            'date_of_payment': 'dateOfPayment'
        }
        self._application_number = application_number
        self._fee_type = fee_type
        self._amount = amount
        self._mode_of_payment = mode_of_payment
        self._cheque_number = cheque_number
        self._date_of_payment = date_of_payment

    @classmethod
    def from_dict(cls, dikt) -> 'ReceiptCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReceiptCreateRequest of this ReceiptCreateRequest.  # noqa: E501
        :rtype: ReceiptCreateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_number(self) -> str:
        """Gets the application_number of this ReceiptCreateRequest.


        :return: The application_number of this ReceiptCreateRequest.
        :rtype: str
        """
        return self._application_number

    @application_number.setter
    def application_number(self, application_number: str):
        """Sets the application_number of this ReceiptCreateRequest.


        :param application_number: The application_number of this ReceiptCreateRequest.
        :type application_number: str
        """

        self._application_number = application_number

    @property
    def fee_type(self) -> str:
        """Gets the fee_type of this ReceiptCreateRequest.


        :return: The fee_type of this ReceiptCreateRequest.
        :rtype: str
        """
        return self._fee_type

    @fee_type.setter
    def fee_type(self, fee_type: str):
        """Sets the fee_type of this ReceiptCreateRequest.


        :param fee_type: The fee_type of this ReceiptCreateRequest.
        :type fee_type: str
        """
        allowed_values = ["firstYearTuitionFee", "firstYearHostelFee", "secondYearTuitionFee", "secondYearHostelFee"]  # noqa: E501
        if fee_type not in allowed_values:
            raise ValueError(
                "Invalid value for `fee_type` ({0}), must be one of {1}"
                .format(fee_type, allowed_values)
            )

        self._fee_type = fee_type

    @property
    def amount(self) -> float:
        """Gets the amount of this ReceiptCreateRequest.


        :return: The amount of this ReceiptCreateRequest.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this ReceiptCreateRequest.


        :param amount: The amount of this ReceiptCreateRequest.
        :type amount: float
        """

        self._amount = amount

    @property
    def mode_of_payment(self) -> str:
        """Gets the mode_of_payment of this ReceiptCreateRequest.


        :return: The mode_of_payment of this ReceiptCreateRequest.
        :rtype: str
        """
        return self._mode_of_payment

    @mode_of_payment.setter
    def mode_of_payment(self, mode_of_payment: str):
        """Sets the mode_of_payment of this ReceiptCreateRequest.


        :param mode_of_payment: The mode_of_payment of this ReceiptCreateRequest.
        :type mode_of_payment: str
        """

        self._mode_of_payment = mode_of_payment

    @property
    def cheque_number(self) -> str:
        """Gets the cheque_number of this ReceiptCreateRequest.


        :return: The cheque_number of this ReceiptCreateRequest.
        :rtype: str
        """
        return self._cheque_number

    @cheque_number.setter
    def cheque_number(self, cheque_number: str):
        """Sets the cheque_number of this ReceiptCreateRequest.


        :param cheque_number: The cheque_number of this ReceiptCreateRequest.
        :type cheque_number: str
        """

        self._cheque_number = cheque_number

    @property
    def date_of_payment(self) -> str:
        """Gets the date_of_payment of this ReceiptCreateRequest.


        :return: The date_of_payment of this ReceiptCreateRequest.
        :rtype: str
        """
        return self._date_of_payment

    @date_of_payment.setter
    def date_of_payment(self, date_of_payment: str):
        """Sets the date_of_payment of this ReceiptCreateRequest.


        :param date_of_payment: The date_of_payment of this ReceiptCreateRequest.
        :type date_of_payment: str
        """

        self._date_of_payment = date_of_payment
